{"version":3,"sources":["./src/app/player/player.component.ts","./src/app/player/player.component.html","./src/app/login/login/login.service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login/login.component.ts","./src/app/login/login/login.component.html","./src/app/app-routing.module.ts","./src/app/template/header/header.component.ts","./src/app/template/header/header.component.html","./src/main.ts","./src/app/login/list/list.component.html","./src/app/login/list/list.component.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-player',\n  templateUrl: './player.component.html',\n  styleUrls: ['./player.component.css']\n})\nexport class PlayerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content\">\n    <iframe class=\"frame\" src=\"https://www.youtube.com/embed/vJyesCH8t08\" title=\"YouTube video player\"\n        frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowfullscreen>\n    </iframe>\n</div>","import { Observable } from 'rxjs';\nimport { loginModel } from './login.model';\nimport { Injectable } from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n    const url = 'https://login-lumen-342zt.ondigitalocean.app/users';\n    //const url = 'http://localhost:3000/user';\n@Injectable()\nexport class loginService{\n \n    \n    constructor(private http: HttpClient,\n                private snackBar: MatSnackBar,\n                private router: Router){\n\n    }\n    showMessage(msg: string): void {\n        this.snackBar.open(msg, 'X', {\n            duration: 1500,\n            horizontalPosition: \"right\",\n            verticalPosition: \"top\",\n            panelClass : \"snackBar\"\n        })\n    }\n\n    doLogin(model: loginModel): void {\n        this.http.post(url,model).subscribe(() => {\n        })\n    }\n    read(): Observable<loginModel[]>{\n        return this.http.get<loginModel[]>(url).pipe(\n        );\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl:'./app.component.html',\n  styles: []\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { HttpClientModule }from '@angular/common/http';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule} from '@angular/material/table';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { NgxMaskModule, IConfig } from 'ngx-mask';\n\nimport { loginService } from './login/login/login.service';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login/login.component';\nimport { PlayerComponent } from './player/player.component';\nimport { ListComponent } from './login/list/list.component';\nimport { HeaderComponent } from './template/header/header.component'; \n\n\nconst maskConfig: Partial<IConfig> = {\n  validation: false,\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    PlayerComponent,\n    ListComponent,\n    HeaderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatCardModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatTableModule,\n    RouterModule,\n    NgxMaskModule.forRoot(maskConfig),\n  ],\n  exports : [\n    \n  ],\n  providers: [loginService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { loginService } from './login.service';\nimport { loginModel } from './login.model';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  formLogin: FormGroup\n\n\n\n  constructor(private service: loginService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.formLogin = new FormGroup({\n      user: new FormControl(null,[Validators.required]),\n      email: new FormControl(null,[Validators.email]),\n      company: new FormControl(null,[Validators.required]),\n      date_nasc: new FormControl(null,[Validators.required]),\n      phone: new FormControl(null,[Validators.required])\n    })\n  }\n\n  onSubmit() {\n\n    let date : string = this.formLogin.get(\"date_nasc\")?.value;\n    let day = date.slice(0,2);\n    let month = date.slice(2,4);\n    let year = date.slice(4,date.length^1);\n    \n    let formatedDate = `${day}/${month}/${year}`;\n\n    const model: loginModel = {\n      name: this.formLogin.get(\"user\")?.value,\n      email: this.formLogin.get(\"email\")?.value,\n      company: this.formLogin.get(\"company\")?.value,\n      date_nasc: formatedDate,\n      phone: this.formLogin.get(\"phone\")?.value\n\n    }\n\n    if(!model.name){\n      this.service.showMessage(\"Nome é obrigatório!\");\n    }\n\n    this.service.doLogin(model);\n    this.router.navigate(['/player']);\n  }\n\n}\n\n","<div class=\"content\">\n  <div class=\"form-login\">\n    <mat-card class=\"card\">\n      <img src=\"../../../assets/Transform.png\" class=\"img\">\n      <mat-card-header class=\"header\">\n        <!-- <mat-card-title class=\"title\">\n        Login\n      </mat-card-title> -->\n      </mat-card-header>\n      <form class=\"form\" [formGroup]=\"formLogin\" (ngSubmit)=\"onSubmit()\">\n        <mat-form-field class=\"input\">\n          <mat-label>Nome</mat-label>\n          <input formControlName=\"user\" required matInput>\n          <mat-error>Nome é obrigatório</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"input\">\n          <mat-label>Email</mat-label>\n          <input formControlName=\"email\" type=\"email\" required matInput>\n          <mat-error>Email Inválido</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"input\">\n          <mat-label>Empresa</mat-label>\n          <input formControlName=\"company\" required matInput>\n          <mat-error>Empresa é obrigatório</mat-error>\n        </mat-form-field>\n\n        <table class=\"table\" cellspacing=\"0\">\n          <tr>\n            <td>\n              <mat-form-field class=\"input\">\n                <mat-label>Data Nascimento</mat-label>\n                <input placeholder=\"dd/mm/yyyy\" formControlName=\"date_nasc\" matInput minlength=\"8\" mask=\"d0/M0/0000\"\n                  required />\n                <mat-error>Data de nascimento é Obrigatória</mat-error>\n              </mat-form-field>\n            </td>\n          <tr>\n          <tr>\n            <td>\n              <mat-form-field class=\"input\">\n                <mat-label>Telefone</mat-label>\n                <input formControlName=\"phone\" matInput mask=\"(00) 00000-0000\" required\n                  placeholder=\"Ex: (78) 9819-2133\">\n                <mat-error>Telefone inválido</mat-error>\n              </mat-form-field>\n            </td>\n          </tr>\n        </table>\n        <button class=\"button\" type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!formLogin.valid\">\n          Acessar\n        </button>\n      </form>\n    </mat-card>\n  </div>\n</div>","import { ListComponent } from './login/list/list.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PlayerComponent } from './player/player.component';\nimport { LoginComponent } from './login/login/login.component';\n\nconst routes: Routes = [\n  { \n    path: '',\n    component : LoginComponent\n  },\n  { \n    path: 'login',\n    component : LoginComponent\n  },\n  {\n    path: 'player',\n    component : PlayerComponent\n  },\n  {\n    path : 'list',\n    component: ListComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"header\">\n    <img src=\"../../../assets/logo1.png\" class=\"img-header\">\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","<div>\n  <h2>Tabela de Usuários Cadastrados</h2>\n  <table>\n    <thead>\n      <th class=\"th-title\">Nome</th>\n      <th class=\"th-title\">Email</th>\n      <th class=\"th-title\">Empresa</th>\n      <th class=\"th-title\">Telefone</th>\n      <th class=\"\">Data Nascimento</th>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let user of dataSource; let i = index\">\n        <td class=\"col-name\"> \n          {{user.name}}\n        </td>\n        <td class=\"col-email\">\n          {{user.email}}\n        </td>\n        <td class=\"col-company\">\n          {{user.company}}\n        </td>\n        <td class=\"col-phone\">\n          {{user.phone | mask: '(00)00000-0000' }}\n        </td>\n        <td class=\"col-data\">\n          {{user.date_nasc}}\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <td colspan=\"5\" class=\"tfooter\">Usuários Cadastrados: {{dataSource.length}}</td>\n      </tr>\n    </tfoot>\n    </table>\n</div>","import { loginService } from './../login/login.service';\nimport { loginModel } from './../login/login.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  dataSource: loginModel[];\n  displayedColumns: ['name','email','company','phone','date_nasc'];\n\n  constructor(private service: loginService) { }\n\n  ngOnInit(): void {\n    this.service.read().subscribe(users => {\n      this.dataSource = users\n      console.log(users)\n    })\n  }\n\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}